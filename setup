#!/bin/bash

# Get the directory where the script is located
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Define the parent directory relative to the script
PARENT_DIR="$SCRIPT_DIR/Templates"

# Check if exactly one argument is provided
if [ $# -ne 1 ]; then
    echo "Error: Please provide the name of a Template"
    echo "Usage: $0 <template>"
    echo "Available Templates:"
    if [ -d "$PARENT_DIR" ]; then
        ls -d "$PARENT_DIR"/*/ 2>/dev/null | while read -r dir; do
            basename "$dir"
        done
    else
        echo "  (No 'Templates' directory found relative to script)"
    fi
    exit 1
fi

# Store the subdirectory name
SUBDIR="$PARENT_DIR/$1"

# Check if the subdirectory exists
if [ ! -d "$SUBDIR" ]; then
    echo "Error: Template '$1' does not exist"
    echo "Available Templates in '$PARENT_DIR':"
    if [ -d "$PARENT_DIR" ]; then
        ls -d "$PARENT_DIR"/*/ 2>/dev/null | while read -r dir; do
            basename "$dir"
        done
    else
        echo "  (No 'Templates' directory found relative to script)"
    fi
    exit 1
fi

# Print the absolute target directory
echo "Copying files to: $(pwd)"

# Enable dotglob to include hidden files
shopt -s dotglob

# Copy all files (including hidden) from subdirectory to current directory, echoing each
copy_success=true
for file in "$SUBDIR"/*; do
    if [ -e "$file" ]; then  # Check if file exists (handles empty directories)
        # Get relative path by removing SUBDIR prefix
        relative_path="${file#$SUBDIR/}"
        echo -e "\tCopying: $relative_path"
        cp -r "$file" .
        if [ $? -ne 0 ]; then
            echo -e "\tError: Failed to copy '$relative_path'"
            copy_success=false
        fi
    fi
done

# Disable dotglob
shopt -u dotglob

# Check if all copies were successful
if [ "$copy_success" = true ]; then
    if [ -n "$(ls -A "$SUBDIR")" ]; then  # Check if directory was non-empty
        echo "Successfully copied files from '$SUBDIR' to current directory"
    else
        echo "No files found in '$SUBDIR' to copy"
    fi
else
    echo "Error: One or more files failed to copy from '$SUBDIR'"
    exit 1
fi